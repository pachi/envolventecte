# Bugs

- Al poner un nombre de elemento en la selección no se selecciona (¿siempre?).
- Arreglar eliminación de horarios hijos en horarios padres:
    - Si se elimina un horario diario el horario mensual que lo use se queda en situación inconsistente
    - Indicar error

# Mejoras

- Vista de detalle JSON (ctrl+alt+h):
    - mostrar elemento de menú solo al activar
- Añadir en editor de geometría una imagen del polígono (hacer versión en SVG).
- Mostrar tooltip en los elementos con avisos
- Señalar con un icono materiales, vidrios, marcos y construcciones de opacos y huecos no usadas
- Introducir overrides de huecos y muros...
- Informe HE1:
    - Carga interna media
    - Añadir valores de referencia HE nuevos y existentes, apéndice E, etc a gráficas
- Informe de mediciones:
    - Opción de mostrar valores detallados (por opaco / espacio)
- ThreeView
    - Opacidad aclarando elementos ocultos
    - Seleccionar elemento activo en las tablas del modelo (y, al revés, mostrar elementos seleccionados en 3D), selecciones múltiples

# Nueva funcionalidad

- Configuración de la aplicación:
    - Mostrar/ocultar valores calculados
- Nuevo tipo de construcciones en groundCons para aislamiento perimetral de soleras?
- Gestor de biblioteca en Ayudas
    - Seleccionar elementos y trasladar a la base de datos del edificio
- Integrar cálculo de F_sh;obst en el programa
    - Añadir en vista de huecos un botón para calcular F_sh;obst y otro para cargar datos externos (KyGananciasSolares.txt)
- Estimación de longitudes de PTs
- Definición de lamas en huecos
- Ayudas:
    - calcular acristalamientos con sombras móviles usando directamente parámetros U_gl, g_gl_n, tau_e_B y ro_e_B
    - calculadoras de U de opacos
    - añadir nueva construcción de hueco a partir de pestaña de elementos
- Informe HE1
    - Gráfica de radiación y fshwi por orientaciones en clima
- ThreeView
    - Tomar ideas de visualización de visorgbxml:
        - https://github.com/ladybug-tools/ladybug-web/
        - https://www.ladybug.tools/spider-gbxml-tools/spider-gbxml-viewer/v-0-17-08/app-viewer/spider-gbxml-viewer.html
        - https://github.com/ladybug-tools/spider-gbxml-tools/tree/master/spider-gbxml-viewer/v-0-17-07
    - Gráfica y posición del sol (Analemma) a partir de mes (1-12), día(1-31) y hora(0-24):
        - https://rawgit.com/ladybug-tools/ladybug-web/gh-pages/solar-calculator-ladybug-web/solar-calculator-ladybug-web-r1.js
        - [Dibuja Analemma](https://github.com/ladybug-tools/ladybug-web/blob/b0d34a5de71ad2e9f489d24ce3e1aa1033378263/analemma-3d/analemma-3d-r10.html#L356)
        - https://github.com/ladybug-tools/ladybug-web/blob/b0d34a5de71ad2e9f489d24ce3e1aa1033378263/analemma-3d/analemma-3d-r18.html
        - Dibujar trayectorias solares en el espacio, para algunos meses y poder mostrar u ocultar.
            - https://drajmarsh.bitbucket.io/sunpath3d.html
            - http://andrewmarsh.com/software/sunpath2d-web/
            - ver http://andrewmarsh.com/software/
            - http://andrewmarsh.com/software/psychro-chart-web/
    - Activar postproceso para mejorar calidad de imagen: https://github.com/IFCjs/web-ifc-viewer/blob/master/viewer/src/components/context/renderer/postproduction.ts
    - Dibujar datos sobre objeto al seleccionar: https://github.com/ladybug-tools/ladybug-web/blob/b0d34a5de71ad2e9f489d24ce3e1aa1033378263/analemma-3d/analemma-3d-r10.html#L694

# Infraestructura

## Mejoras

- Usar Vite para el empaquetado
- Instalar con npm install --legacy-peer-deps (para evitar problemas con tablas y otros paquetes obsoletos)
- Migrar a otra implementación de tabla (sin problemas de mantenimiento y compatibilidad):
    - [React-table](https://react-table-v7.tanstack.com/)
    - [AG Grid](https://www.ag-grid.com/javascript-data-grid/component-cell-editor/)
- Convertir en subrutas las pestañas de las distintas páginas (https://reactrouter.com/en/main/start/tutorial)

# Reorganizaciones

## Rust + ES
- Ver si es posible llevar la salida del logging de Rust a los avisos de wasm
    - Guardar en cada bloque de hulc los avisos y recolectarlos en la conversión a objetos y luego trasladarlos a wasm
- Llevar a wasm:
    - mantener estado en wasm y usar funciones para actualizar geometría,
      construcciones o datos generales para evitar recálculos innecesarios
      (manteniendo el modelo espejo en WASM).

## ES
- Trasladar datos a public/data? (usando luego fetch o direcciones como <a href={process.env.PUBLIC_URL + "/data/zcraddata.json"}>Enlace</a>)
